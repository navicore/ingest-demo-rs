name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    
    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose
    
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose
    
    - name: Build release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --verbose
    
    # - name: Functional test 
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: |
    #     mkdir -p test-output
    #     ./target/release/ingest-demo generate --count 10 > test-output/test.json
    #     cat test-output/test.json | ./target/release/ingest-demo convert --output test-output/parquet
    #     find test-output/parquet -type f | wc -l | grep -v "0"
